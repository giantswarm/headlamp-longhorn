(function(n,r){typeof exports=="object"&&typeof module<"u"?r(require("react/jsx-runtime"),require("@kinvolk/headlamp-plugin/lib"),require("@kinvolk/headlamp-plugin/lib/CommonComponents"),require("@kinvolk/headlamp-plugin/lib/K8s/crd"),require("react-router-dom")):typeof define=="function"&&define.amd?define(["react/jsx-runtime","@kinvolk/headlamp-plugin/lib","@kinvolk/headlamp-plugin/lib/CommonComponents","@kinvolk/headlamp-plugin/lib/K8s/crd","react-router-dom"],r):(n=typeof globalThis<"u"?globalThis:n||self,r(n.pluginLib.ReactJSX,n.pluginLib,n.pluginLib.CommonComponents,n.pluginLib.Crd,n.pluginLib.ReactRouter))})(this,function(n,r,i,g,m){"use strict";const{makeKubeObject:x}=r.K8s.cluster,d="longhorn.io",p="v1beta2",L=g.makeCustomResourceClass({apiInfo:[{group:d,version:p}],isNamespaced:!0,singularName:"Volume",pluralName:"volumes"}),f=g.makeCustomResourceClass({apiInfo:[{group:d,version:p}],isNamespaced:!0,singularName:"Node",pluralName:"nodes"}),O=g.makeCustomResourceClass({apiInfo:[{group:d,version:p}],isNamespaced:!0,singularName:"Setting",pluralName:"settings"}),k=g.makeCustomResourceClass({apiInfo:[{group:d,version:p}],isNamespaced:!0,singularName:"Backup",pluralName:"backups"}),E=g.makeCustomResourceClass({apiInfo:[{group:d,version:p}],isNamespaced:!0,singularName:"EngineImage",pluralName:"engineimages"});function R(){var D,I;const{namespace:t,name:a}=m.useParams(),[e,u]=L.useGet(a,t);if(u)return n.jsxs("div",{children:["Error loading volume: ",u.message]});if(!e)return n.jsx("div",{children:"Loading..."});const{spec:s={},status:o={},metadata:G={}}=e.jsonData||{},{kubernetesStatus:c={}}=o;return n.jsxs(n.Fragment,{children:[n.jsx(i.MainInfoSection,{resource:e,title:`Volume: ${G.name}`,extraInfo:[{name:"State",value:o.state||"-"},{name:"Robustness",value:o.robustness||"-"},{name:"Node",value:o.currentNodeID?n.jsx(i.Link,{routeName:"node",params:{name:o.currentNodeID},children:o.currentNodeID}):"-"},{name:"Size",value:s.size||"-"}]}),n.jsx(i.SectionBox,{title:"Status Details",children:n.jsx(i.NameValueTable,{rows:[{name:"Actual Size",value:o.actualSize||"-"},{name:"Frontend Disabled",value:String(o.frontendDisabled)},{name:"Is Standby",value:String(o.isStandby)},{name:"Share Endpoint",value:o.shareEndpoint||"-"},{name:"Share State",value:o.shareState||"-"},{name:"Last Backup",value:o.lastBackup||"-"},{name:"Last Backup At",value:o.lastBackupAt||"-"},{name:"Expansion Required",value:String(o.expansionRequired)},{name:"Restore Required",value:String(o.restoreRequired)},{name:"Restore Initiated",value:String(o.restoreInitiated)}]})}),n.jsx(i.SectionBox,{title:"Configuration",children:n.jsx(i.NameValueTable,{rows:[{name:"Data Engine",value:s.dataEngine||"-"},{name:"Frontend",value:s.frontend||"-"},{name:"Number of Replicas",value:s.numberOfReplicas||"-"},{name:"Data Locality",value:s.dataLocality||"-"},{name:"Access Mode",value:s.accessMode||"-"},{name:"Backing Image",value:s.backingImage||"-"},{name:"Stale Replica Timeout",value:s.staleReplicaTimeout||"-"},{name:"Encrypted",value:String(s.encrypted)},{name:"Engine Image",value:s.image||"-"},{name:"From Backup",value:s.fromBackup||"-"},{name:"Disk Selector",value:((D=s.diskSelector)==null?void 0:D.join(", "))||"-"},{name:"Node Selector",value:((I=s.nodeSelector)==null?void 0:I.join(", "))||"-"},{name:"Disable Revision Counter",value:String(s.revisionCounterDisabled)},{name:"Replica Auto Balance",value:s.replicaAutoBalance||"-"},{name:"Unmap Mark SnapChain Removed",value:s.unmapMarkSnapChainRemoved||"-"},{name:"Snapshot Data Integrity",value:s.snapshotDataIntegrity||"-"},{name:"Freeze Filesystem For Snapshot",value:s.freezeFilesystemForSnapshot||"-"},{name:"Backup Target",value:s.backupTargetName||"-"},{name:"Backup Compression Method",value:s.backupCompressionMethod||"-"}]})}),n.jsx(i.SectionBox,{title:"Kubernetes Status",children:n.jsx(i.NameValueTable,{rows:[{name:"Namespace",value:c.namespace||"-"},{name:"PVC Name",value:c.pvcName||"-"},{name:"PV Name",value:c.pvName||"-"},{name:"PV Status",value:c.pvStatus||"-"},{name:"Last PVCRef At",value:c.lastPVCRefAt||"-"},{name:"Last PodRef At",value:c.lastPodRefAt||"-"}]})}),n.jsx(i.SectionBox,{title:"Conditions",children:n.jsx(i.ConditionsTable,{resource:e.jsonData})})]})}function T(){const{namespace:t,name:a}=m.useParams(),[e,u]=f.useGet(a,t);return u?n.jsxs("div",{children:["Error loading node: ",u.message]}):e?n.jsx(i.MainInfoSection,{resource:e}):n.jsx("div",{children:"Loading..."})}function _(){const{namespace:t,name:a}=m.useParams(),[e,u]=k.useGet(a,t);return u?n.jsxs("div",{children:["Error loading backup: ",u.message]}):e?n.jsx(i.MainInfoSection,{resource:e}):n.jsx("div",{children:"Loading..."})}function V(){const{namespace:t,name:a}=m.useParams(),[e,u]=E.useGet(a,t);return u?n.jsxs("div",{children:["Error loading engine image: ",u.message]}):e?n.jsx(i.MainInfoSection,{resource:e}):n.jsx("div",{children:"Loading..."})}const l="longhorn",h="volumes",j="volume",S="nodes",B="node",N="settings",v="backups",y="backup",b="engineimages",A="engineimage";r.registerSidebarEntry({parent:null,name:l,label:"Longhorn",icon:"mdi:cow"}),r.registerSidebarEntry({parent:l,name:h,label:"Volumes",url:"/longhorn/volumes"}),r.registerSidebarEntry({parent:l,name:S,label:"Nodes",url:"/longhorn/nodes"}),r.registerSidebarEntry({parent:l,name:N,label:"Settings",url:"/longhorn/settings"}),r.registerSidebarEntry({parent:l,name:v,label:"Backups",url:"/longhorn/backups"}),r.registerSidebarEntry({parent:l,name:b,label:"Engine Images",url:"/longhorn/engineimages"}),r.registerRoute({path:"/longhorn/volumes",sidebar:h,name:h,exact:!0,component:()=>n.jsx(i.ResourceListView,{title:"Longhorn Volumes",resourceClass:L,columns:["name",{id:"state",label:"State",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.state)||"-"},sort:!0},{id:"robustness",label:"Robustness",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.robustness)||"-"},sort:!0},{id:"size",label:"Size",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.spec)==null?void 0:e.size)||"-"},sort:!0},{id:"node",label:"Node",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.currentNodeID)||"-"},sort:!0},"namespace","age"]})}),r.registerRoute({path:"/longhorn/volumes/:namespace/:name",sidebar:h,parent:l,name:j,exact:!0,component:R}),r.registerRoute({path:"/longhorn/nodes",sidebar:S,name:S,exact:!0,component:()=>n.jsx(i.ResourceListView,{title:"Longhorn Nodes",resourceClass:f,columns:["name",{id:"ready",label:"Ready",getter:t=>{var a,e,u,s;return((s=(u=(e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.conditions)==null?void 0:u.find(o=>o.type==="Ready"))==null?void 0:s.status)||"-"},sort:!0},{id:"allowScheduling",label:"Allow Scheduling",getter:t=>{var a,e;return(((e=(a=t.jsonData)==null?void 0:a.spec)==null?void 0:e.allowScheduling)??"-").toString()},sort:!0},{id:"schedulable",label:"Schedulable",getter:t=>{var a,e,u,s;return((s=(u=(e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.conditions)==null?void 0:u.find(o=>o.type==="Schedulable"))==null?void 0:s.status)||"-"},sort:!0},"age"]})}),r.registerRoute({path:"/longhorn/nodes/:namespace/:name",sidebar:S,parent:l,name:B,exact:!0,component:T}),r.registerRoute({path:"/longhorn/settings",sidebar:N,name:N,exact:!0,component:()=>n.jsx(i.ResourceListView,{title:"Longhorn Settings",resourceClass:O,columns:["name",{id:"value",label:"Value",getter:t=>{var a;return(a=t.jsonData)==null?void 0:a.value},sort:!1},{id:"applied",label:"Applied",getter:t=>{var a,e;return(((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.applied)??!1).toString()},sort:!0},"age"]})}),r.registerRoute({path:"/longhorn/backups",sidebar:v,name:v,exact:!0,component:()=>n.jsx(i.ResourceListView,{title:"Longhorn Backups",resourceClass:k,columns:["name",{id:"snapshotName",label:"Snapshot Name",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.snapshotName)||"-"},sort:!0},{id:"snapshotSize",label:"Snapshot Size",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.size)||"-"},sort:!0},{id:"backupTarget",label:"Backup Target",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.backupTargetName)||"-"},sort:!0},{id:"state",label:"State",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.state)||"-"},sort:!0},"namespace","age"]})}),r.registerRoute({path:"/longhorn/backups/:namespace/:name",sidebar:v,parent:l,name:y,exact:!0,component:_}),r.registerRoute({path:"/longhorn/engineimages",sidebar:b,name:b,exact:!0,component:()=>n.jsx(i.ResourceListView,{title:"Longhorn Engine Images",resourceClass:E,columns:["name",{id:"state",label:"State",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.state)||"-"},sort:!0},{id:"image",label:"Image",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.spec)==null?void 0:e.image)||"-"},sort:!0},{id:"refCount",label:"Ref Count",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.refCount)??"-"},sort:!0},{id:"buildDate",label:"Build Date",getter:t=>{var a,e;return((e=(a=t.jsonData)==null?void 0:a.status)==null?void 0:e.buildDate)||"-"},sort:!0},"age"]})}),r.registerRoute({path:"/longhorn/engineimages/:namespace/:name",sidebar:b,parent:l,name:A,exact:!0,component:V}),console.log("Longhorn Plugin registered.")});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICByZWdpc3RlclJvdXRlLFxuICByZWdpc3RlclNpZGViYXJFbnRyeSxcbiAgSzhzLFxuICAvLyBQbHVnaW4sIC8vIFVuY29tbWVudCBpZiB5b3UgbmVlZCBQbHVnaW4gY2xhc3MgZmVhdHVyZXNcbn0gZnJvbSAnQGtpbnZvbGsvaGVhZGxhbXAtcGx1Z2luL2xpYic7XG5pbXBvcnQge1xuICBEZXRhaWxzR3JpZCxcbiAgUmVzb3VyY2VMaXN0VmlldyxcbiAgTWFpbkluZm9TZWN0aW9uLCAvLyBJbXBvcnQgTWFpbkluZm9TZWN0aW9uXG4gIFNlY3Rpb25Cb3gsICAgICAgICAgLy8gPC0tIEFkZCBTZWN0aW9uQm94XG4gIE5hbWVWYWx1ZVRhYmxlLCAgICAgLy8gPC0tIEFkZCBOYW1lVmFsdWVUYWJsZVxuICBDb25kaXRpb25zVGFibGUsICAgIC8vIDwtLSBBZGQgQ29uZGl0aW9uc1RhYmxlXG4gIExpbmssICAgICAgICAgICAgICAgLy8gPC0tIEFkZCBMaW5rXG59IGZyb20gJ0BraW52b2xrL2hlYWRsYW1wLXBsdWdpbi9saWIvQ29tbW9uQ29tcG9uZW50cyc7XG5pbXBvcnQgeyBLdWJlT2JqZWN0SW50ZXJmYWNlIH0gZnJvbSAnQGtpbnZvbGsvaGVhZGxhbXAtcGx1Z2luL2xpYi9LOHMvY2x1c3Rlcic7XG5pbXBvcnQgeyBtYWtlQ3VzdG9tUmVzb3VyY2VDbGFzcyB9IGZyb20gJ0BraW52b2xrL2hlYWRsYW1wLXBsdWdpbi9saWIvSzhzL2NyZCc7IC8vIEltcG9ydCBtYWtlQ3VzdG9tUmVzb3VyY2VDbGFzc1xuaW1wb3J0IHsgdXNlUGFyYW1zIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7IC8vIEltcG9ydCB1c2VQYXJhbXNcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7IC8vIEltcG9ydCBSZWFjdFxuXG5jb25zdCB7IG1ha2VLdWJlT2JqZWN0IH0gPSBLOHMuY2x1c3RlcjtcblxuLy8gRGVmaW5lIGZ1bmN0aW9ucyB0aGF0IHJldHVybiB0aGUgTG9uZ2hvcm4gUmVzb3VyY2UgQ2xhc3Nlc1xuY29uc3QgbG9uZ2hvcm5Hcm91cCA9ICdsb25naG9ybi5pbyc7XG5jb25zdCBsb25naG9yblZlcnNpb24gPSAndjFiZXRhMic7IC8vIFVzaW5nIHYxYmV0YTIgYXMgZGVmaW5lZCBpbiBDUkRzXG5cbmNvbnN0IExvbmdob3JuVm9sdW1lID0gbWFrZUN1c3RvbVJlc291cmNlQ2xhc3Moe1xuICBhcGlJbmZvOiBbeyBncm91cDogbG9uZ2hvcm5Hcm91cCwgdmVyc2lvbjogbG9uZ2hvcm5WZXJzaW9uIH1dLFxuICBpc05hbWVzcGFjZWQ6IHRydWUsXG4gIHNpbmd1bGFyTmFtZTogJ1ZvbHVtZScsXG4gIHBsdXJhbE5hbWU6ICd2b2x1bWVzJyxcbn0pO1xuXG5jb25zdCBMb25naG9ybk5vZGUgPSBtYWtlQ3VzdG9tUmVzb3VyY2VDbGFzcyh7XG4gIGFwaUluZm86IFt7IGdyb3VwOiBsb25naG9ybkdyb3VwLCB2ZXJzaW9uOiBsb25naG9yblZlcnNpb24gfV0sXG4gIGlzTmFtZXNwYWNlZDogdHJ1ZSwgLy8gQXNzdW1pbmcgTm9kZXMgYXJlIG5hbWVzcGFjZWQgYmFzZWQgb24gQ1JELCBhZGp1c3QgaWYgY2x1c3Rlci1zY29wZWRcbiAgc2luZ3VsYXJOYW1lOiAnTm9kZScsXG4gIHBsdXJhbE5hbWU6ICdub2RlcycsXG59KTtcblxuY29uc3QgTG9uZ2hvcm5TZXR0aW5nID0gbWFrZUN1c3RvbVJlc291cmNlQ2xhc3Moe1xuICBhcGlJbmZvOiBbeyBncm91cDogbG9uZ2hvcm5Hcm91cCwgdmVyc2lvbjogbG9uZ2hvcm5WZXJzaW9uIH1dLFxuICBpc05hbWVzcGFjZWQ6IHRydWUsIC8vIFNldHRpbmdzIENSRCBzY29wZSBpcyBOYW1lc3BhY2VkXG4gIHNpbmd1bGFyTmFtZTogJ1NldHRpbmcnLFxuICBwbHVyYWxOYW1lOiAnc2V0dGluZ3MnLFxufSk7XG5cbmNvbnN0IExvbmdob3JuQmFja3VwID0gbWFrZUN1c3RvbVJlc291cmNlQ2xhc3Moe1xuICBhcGlJbmZvOiBbeyBncm91cDogbG9uZ2hvcm5Hcm91cCwgdmVyc2lvbjogbG9uZ2hvcm5WZXJzaW9uIH1dLFxuICBpc05hbWVzcGFjZWQ6IHRydWUsXG4gIHNpbmd1bGFyTmFtZTogJ0JhY2t1cCcsXG4gIHBsdXJhbE5hbWU6ICdiYWNrdXBzJyxcbn0pO1xuXG5jb25zdCBMb25naG9ybkVuZ2luZUltYWdlID0gbWFrZUN1c3RvbVJlc291cmNlQ2xhc3Moe1xuICBhcGlJbmZvOiBbeyBncm91cDogbG9uZ2hvcm5Hcm91cCwgdmVyc2lvbjogbG9uZ2hvcm5WZXJzaW9uIH1dLFxuICBpc05hbWVzcGFjZWQ6IHRydWUsIC8vIEVuZ2luZUltYWdlIENSRCBzY29wZSBpcyBOYW1lc3BhY2VkXG4gIHNpbmd1bGFyTmFtZTogJ0VuZ2luZUltYWdlJyxcbiAgcGx1cmFsTmFtZTogJ2VuZ2luZWltYWdlcycsXG59KTtcblxuLy8gRGVmaW5lIERldGFpbCBWaWV3IFdyYXBwZXIgQ29tcG9uZW50c1xuZnVuY3Rpb24gVm9sdW1lRGV0YWlsc1ZpZXcoKSB7XG4gIGNvbnN0IHsgbmFtZXNwYWNlLCBuYW1lIH0gPSB1c2VQYXJhbXM8eyBuYW1lc3BhY2U6IHN0cmluZzsgbmFtZTogc3RyaW5nIH0+KCk7XG4gIGNvbnN0IFtpdGVtLCBlcnJvcl0gPSBMb25naG9yblZvbHVtZS51c2VHZXQobmFtZSwgbmFtZXNwYWNlKTtcblxuICBpZiAoZXJyb3IpIHtcbiAgICAvLyBAdHMtaWdub3JlIEVycm9yIHR5cGUgaXMgbm90IHdlbGwgZGVmaW5lZFxuICAgIHJldHVybiA8ZGl2PkVycm9yIGxvYWRpbmcgdm9sdW1lOiB7KGVycm9yIGFzIEVycm9yKS5tZXNzYWdlfTwvZGl2PjtcbiAgfVxuICBpZiAoIWl0ZW0pIHtcbiAgICByZXR1cm4gPGRpdj5Mb2FkaW5nLi4uPC9kaXY+O1xuICB9XG5cbiAgLy8gUmVzdG9yZSBvcmlnaW5hbCByZW5kZXJpbmdcbiAgY29uc3QgeyBzcGVjID0ge30sIHN0YXR1cyA9IHt9LCBtZXRhZGF0YSA9IHt9IH0gPSBpdGVtLmpzb25EYXRhIHx8IHt9O1xuICBjb25zdCB7IGt1YmVybmV0ZXNTdGF0dXMgPSB7fSB9ID0gc3RhdHVzO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxNYWluSW5mb1NlY3Rpb25cbiAgICAgICAgcmVzb3VyY2U9e2l0ZW19XG4gICAgICAgIC8vIEB0cy1pZ25vcmUgVGl0bGUgcHJvcCB3b3JrcyBidXQgbWlnaHQgc2hvdyBUUyBlcnJvciBkZXBlbmRpbmcgb24gSGVhZGxhbXAgdmVyc2lvblxuICAgICAgICB0aXRsZT17YFZvbHVtZTogJHttZXRhZGF0YS5uYW1lfWB9XG4gICAgICAgIGV4dHJhSW5mbz17W1xuICAgICAgICAgICB7IG5hbWU6ICdTdGF0ZScsIHZhbHVlOiBzdGF0dXMuc3RhdGUgfHwgJy0nIH0sXG4gICAgICAgICAgIHsgbmFtZTogJ1JvYnVzdG5lc3MnLCB2YWx1ZTogc3RhdHVzLnJvYnVzdG5lc3MgfHwgJy0nIH0sXG4gICAgICAgICAgIHtcbiAgICAgICAgICAgICBuYW1lOiAnTm9kZScsXG4gICAgICAgICAgICAgdmFsdWU6IHN0YXR1cy5jdXJyZW50Tm9kZUlEID8gKFxuICAgICAgICAgICAgICAgPExpbmsgcm91dGVOYW1lPVwibm9kZVwiIHBhcmFtcz17eyBuYW1lOiBzdGF0dXMuY3VycmVudE5vZGVJRCB9fT5cbiAgICAgICAgICAgICAgICAge3N0YXR1cy5jdXJyZW50Tm9kZUlEfVxuICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAnLSdcbiAgICAgICAgICAgICApLFxuICAgICAgICAgICB9LFxuICAgICAgICAgICB7IG5hbWU6ICdTaXplJywgdmFsdWU6IHNwZWMuc2l6ZSB8fCAnLScgfSxcbiAgICAgICAgXX1cbiAgICAgICAgLy8gYWN0aW9ucz17WyAvKiBBZGQgQWN0aW9ucyBIZXJlICovIF19XG4gICAgICAvPlxuICAgICAgPFNlY3Rpb25Cb3ggdGl0bGU9XCJTdGF0dXMgRGV0YWlsc1wiPlxuICAgICAgICAgPE5hbWVWYWx1ZVRhYmxlXG4gICAgICAgICAgIHJvd3M9e1tcbiAgICAgICAgICAgICB7IG5hbWU6ICdBY3R1YWwgU2l6ZScsIHZhbHVlOiBzdGF0dXMuYWN0dWFsU2l6ZSB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdGcm9udGVuZCBEaXNhYmxlZCcsIHZhbHVlOiBTdHJpbmcoc3RhdHVzLmZyb250ZW5kRGlzYWJsZWQpIH0sXG4gICAgICAgICAgICAgeyBuYW1lOiAnSXMgU3RhbmRieScsIHZhbHVlOiBTdHJpbmcoc3RhdHVzLmlzU3RhbmRieSkgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdTaGFyZSBFbmRwb2ludCcsIHZhbHVlOiBzdGF0dXMuc2hhcmVFbmRwb2ludCB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdTaGFyZSBTdGF0ZScsIHZhbHVlOiBzdGF0dXMuc2hhcmVTdGF0ZSB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdMYXN0IEJhY2t1cCcsIHZhbHVlOiBzdGF0dXMubGFzdEJhY2t1cCB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdMYXN0IEJhY2t1cCBBdCcsIHZhbHVlOiBzdGF0dXMubGFzdEJhY2t1cEF0IHx8ICctJyB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ0V4cGFuc2lvbiBSZXF1aXJlZCcsIHZhbHVlOiBTdHJpbmcoc3RhdHVzLmV4cGFuc2lvblJlcXVpcmVkKSB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ1Jlc3RvcmUgUmVxdWlyZWQnLCB2YWx1ZTogU3RyaW5nKHN0YXR1cy5yZXN0b3JlUmVxdWlyZWQpIH0sXG4gICAgICAgICAgICAgeyBuYW1lOiAnUmVzdG9yZSBJbml0aWF0ZWQnLCB2YWx1ZTogU3RyaW5nKHN0YXR1cy5yZXN0b3JlSW5pdGlhdGVkKSB9LFxuICAgICAgICAgICBdfVxuICAgICAgICAgLz5cbiAgICAgIDwvU2VjdGlvbkJveD5cbiAgICAgIDxTZWN0aW9uQm94IHRpdGxlPVwiQ29uZmlndXJhdGlvblwiPlxuICAgICAgICAgPE5hbWVWYWx1ZVRhYmxlXG4gICAgICAgICAgIHJvd3M9e1tcbiAgICAgICAgICAgICB7IG5hbWU6ICdEYXRhIEVuZ2luZScsIHZhbHVlOiBzcGVjLmRhdGFFbmdpbmUgfHwgJy0nIH0sXG4gICAgICAgICAgICAgeyBuYW1lOiAnRnJvbnRlbmQnLCB2YWx1ZTogc3BlYy5mcm9udGVuZCB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdOdW1iZXIgb2YgUmVwbGljYXMnLCB2YWx1ZTogc3BlYy5udW1iZXJPZlJlcGxpY2FzIHx8ICctJyB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ0RhdGEgTG9jYWxpdHknLCB2YWx1ZTogc3BlYy5kYXRhTG9jYWxpdHkgfHwgJy0nIH0sXG4gICAgICAgICAgICAgeyBuYW1lOiAnQWNjZXNzIE1vZGUnLCB2YWx1ZTogc3BlYy5hY2Nlc3NNb2RlIHx8ICctJyB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ0JhY2tpbmcgSW1hZ2UnLCB2YWx1ZTogc3BlYy5iYWNraW5nSW1hZ2UgfHwgJy0nIH0sXG4gICAgICAgICAgICAgeyBuYW1lOiAnU3RhbGUgUmVwbGljYSBUaW1lb3V0JywgdmFsdWU6IHNwZWMuc3RhbGVSZXBsaWNhVGltZW91dCB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdFbmNyeXB0ZWQnLCB2YWx1ZTogU3RyaW5nKHNwZWMuZW5jcnlwdGVkKSB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ0VuZ2luZSBJbWFnZScsIHZhbHVlOiBzcGVjLmltYWdlIHx8ICctJyB9LCAvLyBFbmdpbmUgaW1hZ2UgdXNlZFxuICAgICAgICAgICAgIHsgbmFtZTogJ0Zyb20gQmFja3VwJywgdmFsdWU6IHNwZWMuZnJvbUJhY2t1cCB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdEaXNrIFNlbGVjdG9yJywgdmFsdWU6IHNwZWMuZGlza1NlbGVjdG9yPy5qb2luKCcsICcpIHx8ICctJyB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ05vZGUgU2VsZWN0b3InLCB2YWx1ZTogc3BlYy5ub2RlU2VsZWN0b3I/LmpvaW4oJywgJykgfHwgJy0nIH0sXG4gICAgICAgICAgICAgeyBuYW1lOiAnRGlzYWJsZSBSZXZpc2lvbiBDb3VudGVyJywgdmFsdWU6IFN0cmluZyhzcGVjLnJldmlzaW9uQ291bnRlckRpc2FibGVkKSB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ1JlcGxpY2EgQXV0byBCYWxhbmNlJywgdmFsdWU6IHNwZWMucmVwbGljYUF1dG9CYWxhbmNlIHx8ICctJyB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ1VubWFwIE1hcmsgU25hcENoYWluIFJlbW92ZWQnLCB2YWx1ZTogc3BlYy51bm1hcE1hcmtTbmFwQ2hhaW5SZW1vdmVkIHx8ICctJyB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ1NuYXBzaG90IERhdGEgSW50ZWdyaXR5JywgdmFsdWU6IHNwZWMuc25hcHNob3REYXRhSW50ZWdyaXR5IHx8ICctJyB9LFxuICAgICAgICAgICAgIHsgbmFtZTogJ0ZyZWV6ZSBGaWxlc3lzdGVtIEZvciBTbmFwc2hvdCcsIHZhbHVlOiBzcGVjLmZyZWV6ZUZpbGVzeXN0ZW1Gb3JTbmFwc2hvdCB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdCYWNrdXAgVGFyZ2V0JywgdmFsdWU6IHNwZWMuYmFja3VwVGFyZ2V0TmFtZSB8fCAnLScgfSxcbiAgICAgICAgICAgICB7IG5hbWU6ICdCYWNrdXAgQ29tcHJlc3Npb24gTWV0aG9kJywgdmFsdWU6IHNwZWMuYmFja3VwQ29tcHJlc3Npb25NZXRob2QgfHwgJy0nIH0sXG4gICAgICAgICAgIF19XG4gICAgICAgICAvPlxuICAgICAgPC9TZWN0aW9uQm94PlxuICAgICAgPFNlY3Rpb25Cb3ggdGl0bGU9XCJLdWJlcm5ldGVzIFN0YXR1c1wiPlxuICAgICAgICAgPE5hbWVWYWx1ZVRhYmxlXG4gICAgICAgICAgICAgcm93cz17W1xuICAgICAgICAgICAgICAgeyBuYW1lOiAnTmFtZXNwYWNlJywgdmFsdWU6IGt1YmVybmV0ZXNTdGF0dXMubmFtZXNwYWNlIHx8ICctJyB9LFxuICAgICAgICAgICAgICAgeyBuYW1lOiAnUFZDIE5hbWUnLCB2YWx1ZToga3ViZXJuZXRlc1N0YXR1cy5wdmNOYW1lIHx8ICctJyB9LFxuICAgICAgICAgICAgICAgeyBuYW1lOiAnUFYgTmFtZScsIHZhbHVlOiBrdWJlcm5ldGVzU3RhdHVzLnB2TmFtZSB8fCAnLScgfSxcbiAgICAgICAgICAgICAgIHsgbmFtZTogJ1BWIFN0YXR1cycsIHZhbHVlOiBrdWJlcm5ldGVzU3RhdHVzLnB2U3RhdHVzIHx8ICctJyB9LFxuICAgICAgICAgICAgICAgeyBuYW1lOiAnTGFzdCBQVkNSZWYgQXQnLCB2YWx1ZToga3ViZXJuZXRlc1N0YXR1cy5sYXN0UFZDUmVmQXQgfHwgJy0nIH0sXG4gICAgICAgICAgICAgICB7IG5hbWU6ICdMYXN0IFBvZFJlZiBBdCcsIHZhbHVlOiBrdWJlcm5ldGVzU3RhdHVzLmxhc3RQb2RSZWZBdCB8fCAnLScgfSxcbiAgICAgICAgICAgICAgIC8vIFRPRE86IENvbnNpZGVyIHJlbmRlcmluZyB3b3JrbG9hZHNTdGF0dXMgYXMgYSBzbWFsbCB0YWJsZSBpZiBuZWVkZWRcbiAgICAgICAgICAgICBdfVxuICAgICAgICAgICAvPlxuICAgICAgPC9TZWN0aW9uQm94PlxuICAgICAgPFNlY3Rpb25Cb3ggdGl0bGU9XCJDb25kaXRpb25zXCI+XG4gICAgICAgICA8Q29uZGl0aW9uc1RhYmxlIHJlc291cmNlPXtpdGVtLmpzb25EYXRhfSAvPlxuICAgICAgPC9TZWN0aW9uQm94PlxuICAgICAgey8qIFRPRE86IEFkZCBzZWN0aW9ucyBmb3IgUmVwbGljYXMsIFNuYXBzaG90cywgZXRjLiBsaW5raW5nIHRvIHJlc3BlY3RpdmUgdmlld3MgaWYgYXBwbGljYWJsZSAqL31cbiAgICA8Lz5cbiAgKTtcbn1cblxuZnVuY3Rpb24gTm9kZURldGFpbHNWaWV3KCkge1xuICBjb25zdCB7IG5hbWVzcGFjZSwgbmFtZSB9ID0gdXNlUGFyYW1zPHsgbmFtZXNwYWNlOiBzdHJpbmc7IG5hbWU6IHN0cmluZyB9PigpO1xuICBjb25zdCBbaXRlbSwgZXJyb3JdID0gTG9uZ2hvcm5Ob2RlLnVzZUdldChuYW1lLCBuYW1lc3BhY2UpO1xuXG4gIGlmIChlcnJvcikge1xuICAgIHJldHVybiA8ZGl2PkVycm9yIGxvYWRpbmcgbm9kZTogeyhlcnJvciBhcyBFcnJvcikubWVzc2FnZX08L2Rpdj47XG4gIH1cbiAgaWYgKCFpdGVtKSB7XG4gICAgcmV0dXJuIDxkaXY+TG9hZGluZy4uLjwvZGl2PjtcbiAgfVxuXG4gIHJldHVybiA8TWFpbkluZm9TZWN0aW9uIHJlc291cmNlPXtpdGVtfSAvPjtcbn1cblxuZnVuY3Rpb24gQmFja3VwRGV0YWlsc1ZpZXcoKSB7XG4gIGNvbnN0IHsgbmFtZXNwYWNlLCBuYW1lIH0gPSB1c2VQYXJhbXM8eyBuYW1lc3BhY2U6IHN0cmluZzsgbmFtZTogc3RyaW5nIH0+KCk7XG4gIGNvbnN0IFtpdGVtLCBlcnJvcl0gPSBMb25naG9ybkJhY2t1cC51c2VHZXQobmFtZSwgbmFtZXNwYWNlKTtcblxuICBpZiAoZXJyb3IpIHtcbiAgICByZXR1cm4gPGRpdj5FcnJvciBsb2FkaW5nIGJhY2t1cDogeyhlcnJvciBhcyBFcnJvcikubWVzc2FnZX08L2Rpdj47XG4gIH1cbiAgaWYgKCFpdGVtKSB7XG4gICAgcmV0dXJuIDxkaXY+TG9hZGluZy4uLjwvZGl2PjtcbiAgfVxuXG4gIHJldHVybiA8TWFpbkluZm9TZWN0aW9uIHJlc291cmNlPXtpdGVtfSAvPjtcbn1cblxuZnVuY3Rpb24gRW5naW5lSW1hZ2VEZXRhaWxzVmlldygpIHtcbiAgY29uc3QgeyBuYW1lc3BhY2UsIG5hbWUgfSA9IHVzZVBhcmFtczx7IG5hbWVzcGFjZTogc3RyaW5nOyBuYW1lOiBzdHJpbmcgfT4oKTtcbiAgY29uc3QgW2l0ZW0sIGVycm9yXSA9IExvbmdob3JuRW5naW5lSW1hZ2UudXNlR2V0KG5hbWUsIG5hbWVzcGFjZSk7XG5cbiAgaWYgKGVycm9yKSB7XG4gICAgcmV0dXJuIDxkaXY+RXJyb3IgbG9hZGluZyBlbmdpbmUgaW1hZ2U6IHsoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2V9PC9kaXY+O1xuICB9XG4gIGlmICghaXRlbSkge1xuICAgIHJldHVybiA8ZGl2PkxvYWRpbmcuLi48L2Rpdj47XG4gIH1cblxuICByZXR1cm4gPE1haW5JbmZvU2VjdGlvbiByZXNvdXJjZT17aXRlbX0gLz47XG59XG5cbi8vIERlZmluZSByb3V0ZXMgYW5kIHNpZGViYXIgbmFtZXMgYXMgY29uc3RhbnRzXG5jb25zdCBMT05HSE9STl9ST09UX1NJREVCQVIgPSAnbG9uZ2hvcm4nO1xuY29uc3QgTE9OR0hPUk5fVk9MVU1FU19MSVNUX1JPVVRFID0gJ3ZvbHVtZXMnO1xuY29uc3QgTE9OR0hPUk5fVk9MVU1FX0RFVEFJTFNfUk9VVEUgPSAndm9sdW1lJztcbmNvbnN0IExPTkdIT1JOX05PREVTX0xJU1RfUk9VVEUgPSAnbm9kZXMnO1xuY29uc3QgTE9OR0hPUk5fTk9ERV9ERVRBSUxTX1JPVVRFID0gJ25vZGUnO1xuY29uc3QgTE9OR0hPUk5fU0VUVElOR1NfTElTVF9ST1VURSA9ICdzZXR0aW5ncyc7XG4vLyBjb25zdCBMT05HSE9STl9TRVRUSU5HX0RFVEFJTFNfUk9VVEUgPSAnbG9uZ2hvcm5TZXR0aW5nJzsgLy8gTm8gZGV0YWlscyB2aWV3IGZvciBzZXR0aW5ncyB5ZXRcbmNvbnN0IExPTkdIT1JOX0JBQ0tVUFNfTElTVF9ST1VURSA9ICdiYWNrdXBzJztcbmNvbnN0IExPTkdIT1JOX0JBQ0tVUF9ERVRBSUxTX1JPVVRFID0gJ2JhY2t1cCc7XG5jb25zdCBMT05HSE9STl9FTkdJTkVfSU1BR0VTX0xJU1RfUk9VVEUgPSAnZW5naW5laW1hZ2VzJztcbmNvbnN0IExPTkdIT1JOX0VOR0lORV9JTUFHRV9ERVRBSUxTX1JPVVRFID0gJ2VuZ2luZWltYWdlJztcblxuLy8gUmVnaXN0ZXIgU2lkZWJhciBFbnRyaWVzXG5cbnJlZ2lzdGVyU2lkZWJhckVudHJ5KHtcbiAgcGFyZW50OiBudWxsLCAvLyBUb3AtbGV2ZWwgZW50cnlcbiAgbmFtZTogTE9OR0hPUk5fUk9PVF9TSURFQkFSLFxuICBsYWJlbDogJ0xvbmdob3JuJyxcbiAgaWNvbjogJ21kaTpjb3cnLCAvLyBFeGFtcGxlIGljb24sIGZpbmQgYXBwcm9wcmlhdGUgb25lIGF0IGh0dHBzOi8vaWNvbi1zZXRzLmljb25pZnkuZGVzaWduL21kaS9cbn0pO1xuXG5yZWdpc3RlclNpZGViYXJFbnRyeSh7XG4gIHBhcmVudDogTE9OR0hPUk5fUk9PVF9TSURFQkFSLFxuICBuYW1lOiBMT05HSE9STl9WT0xVTUVTX0xJU1RfUk9VVEUsXG4gIGxhYmVsOiAnVm9sdW1lcycsXG4gIHVybDogJy9sb25naG9ybi92b2x1bWVzJyxcbn0pO1xuXG5yZWdpc3RlclNpZGViYXJFbnRyeSh7XG4gIHBhcmVudDogTE9OR0hPUk5fUk9PVF9TSURFQkFSLFxuICBuYW1lOiBMT05HSE9STl9OT0RFU19MSVNUX1JPVVRFLFxuICBsYWJlbDogJ05vZGVzJyxcbiAgdXJsOiAnL2xvbmdob3JuL25vZGVzJyxcbn0pO1xuXG5yZWdpc3RlclNpZGViYXJFbnRyeSh7XG4gIHBhcmVudDogTE9OR0hPUk5fUk9PVF9TSURFQkFSLFxuICBuYW1lOiBMT05HSE9STl9TRVRUSU5HU19MSVNUX1JPVVRFLFxuICBsYWJlbDogJ1NldHRpbmdzJyxcbiAgdXJsOiAnL2xvbmdob3JuL3NldHRpbmdzJyxcbn0pO1xuXG5yZWdpc3RlclNpZGViYXJFbnRyeSh7XG4gIHBhcmVudDogTE9OR0hPUk5fUk9PVF9TSURFQkFSLFxuICBuYW1lOiBMT05HSE9STl9CQUNLVVBTX0xJU1RfUk9VVEUsXG4gIGxhYmVsOiAnQmFja3VwcycsXG4gIHVybDogJy9sb25naG9ybi9iYWNrdXBzJyxcbn0pO1xuXG5yZWdpc3RlclNpZGViYXJFbnRyeSh7XG4gIHBhcmVudDogTE9OR0hPUk5fUk9PVF9TSURFQkFSLFxuICBuYW1lOiBMT05HSE9STl9FTkdJTkVfSU1BR0VTX0xJU1RfUk9VVEUsXG4gIGxhYmVsOiAnRW5naW5lIEltYWdlcycsXG4gIHVybDogJy9sb25naG9ybi9lbmdpbmVpbWFnZXMnLFxufSk7XG5cbi8vIFJlZ2lzdGVyIFJvdXRlcyBhbmQgQ29tcG9uZW50c1xuXG4vLyBWb2x1bWVzIExpc3QgVmlld1xucmVnaXN0ZXJSb3V0ZSh7XG4gIHBhdGg6ICcvbG9uZ2hvcm4vdm9sdW1lcycsXG4gIHNpZGViYXI6IExPTkdIT1JOX1ZPTFVNRVNfTElTVF9ST1VURSxcbiAgbmFtZTogTE9OR0hPUk5fVk9MVU1FU19MSVNUX1JPVVRFLFxuICBleGFjdDogdHJ1ZSxcbiAgY29tcG9uZW50OiAoKSA9PiAoXG4gICAgPFJlc291cmNlTGlzdFZpZXdcbiAgICAgIHRpdGxlPVwiTG9uZ2hvcm4gVm9sdW1lc1wiXG4gICAgICByZXNvdXJjZUNsYXNzPXtMb25naG9yblZvbHVtZX1cbiAgICAgIGNvbHVtbnM9e1tcbiAgICAgICAgLy8gVXNlIGRlZmF1bHQgbmFtZSBjb2x1bW4gcmVuZGVyaW5nXG4gICAgICAgICduYW1lJyxcbiAgICAgICAgLy8gT3RoZXIgY29sdW1ucy4uLiAoc3RhdGUsIHJvYnVzdG5lc3MsIHNpemUsIG5vZGUsIG5hbWVzcGFjZSwgYWdlKVxuICAgICAgICB7XG4gICAgICAgICAgaWQ6ICdzdGF0ZScsXG4gICAgICAgICAgbGFiZWw6ICdTdGF0ZScsXG4gICAgICAgICAgZ2V0dGVyOiAodm9sdW1lOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PiB2b2x1bWUuanNvbkRhdGE/LnN0YXR1cz8uc3RhdGUgfHwgJy0nLFxuICAgICAgICAgIHNvcnQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ3JvYnVzdG5lc3MnLFxuICAgICAgICAgIGxhYmVsOiAnUm9idXN0bmVzcycsXG4gICAgICAgICAgZ2V0dGVyOiAodm9sdW1lOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PiB2b2x1bWUuanNvbkRhdGE/LnN0YXR1cz8ucm9idXN0bmVzcyB8fCAnLScsXG4gICAgICAgICAgc29ydDogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGlkOiAnc2l6ZScsXG4gICAgICAgICAgbGFiZWw6ICdTaXplJyxcbiAgICAgICAgICBnZXR0ZXI6ICh2b2x1bWU6IEt1YmVPYmplY3RJbnRlcmZhY2UpID0+IHZvbHVtZS5qc29uRGF0YT8uc3BlYz8uc2l6ZSB8fCAnLScsXG4gICAgICAgICAgc29ydDogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGlkOiAnbm9kZScsXG4gICAgICAgICAgbGFiZWw6ICdOb2RlJyxcbiAgICAgICAgICBnZXR0ZXI6ICh2b2x1bWU6IEt1YmVPYmplY3RJbnRlcmZhY2UpID0+IHZvbHVtZS5qc29uRGF0YT8uc3RhdHVzPy5jdXJyZW50Tm9kZUlEIHx8ICctJyxcbiAgICAgICAgICBzb3J0OiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICAnbmFtZXNwYWNlJyxcbiAgICAgICAgJ2FnZScsXG4gICAgICBdfVxuICAgIC8+XG4gICksXG59KTtcblxuLy8gVm9sdW1lIERldGFpbCBWaWV3XG5yZWdpc3RlclJvdXRlKHtcbiAgcGF0aDogJy9sb25naG9ybi92b2x1bWVzLzpuYW1lc3BhY2UvOm5hbWUnLFxuICBzaWRlYmFyOiBMT05HSE9STl9WT0xVTUVTX0xJU1RfUk9VVEUsXG4gIHBhcmVudDogTE9OR0hPUk5fUk9PVF9TSURFQkFSLFxuICBuYW1lOiBMT05HSE9STl9WT0xVTUVfREVUQUlMU19ST1VURSxcbiAgZXhhY3Q6IHRydWUsXG4gIGNvbXBvbmVudDogVm9sdW1lRGV0YWlsc1ZpZXcsXG59KTtcblxuLy8gTm9kZXMgTGlzdCBWaWV3XG5yZWdpc3RlclJvdXRlKHtcbiAgcGF0aDogJy9sb25naG9ybi9ub2RlcycsXG4gIHNpZGViYXI6IExPTkdIT1JOX05PREVTX0xJU1RfUk9VVEUsXG4gIG5hbWU6IExPTkdIT1JOX05PREVTX0xJU1RfUk9VVEUsXG4gIGV4YWN0OiB0cnVlLFxuICBjb21wb25lbnQ6ICgpID0+IChcbiAgICA8UmVzb3VyY2VMaXN0Vmlld1xuICAgICAgdGl0bGU9XCJMb25naG9ybiBOb2Rlc1wiXG4gICAgICByZXNvdXJjZUNsYXNzPXtMb25naG9ybk5vZGV9XG4gICAgICBjb2x1bW5zPXtbXG4gICAgICAgIC8vIFVzZSBkZWZhdWx0IG5hbWUgY29sdW1uIHJlbmRlcmluZ1xuICAgICAgICAnbmFtZScsXG4gICAgICAgIC8vIE90aGVyIGNvbHVtbnMuLi5cbiAgICAgICAge1xuICAgICAgICAgIGlkOiAncmVhZHknLFxuICAgICAgICAgIGxhYmVsOiAnUmVhZHknLFxuICAgICAgICAgIGdldHRlcjogKG5vZGU6IEt1YmVPYmplY3RJbnRlcmZhY2UpID0+XG4gICAgICAgICAgICBub2RlLmpzb25EYXRhPy5zdGF0dXM/LmNvbmRpdGlvbnM/LmZpbmQoKGM6IGFueSkgPT4gYy50eXBlID09PSAnUmVhZHknKT8uc3RhdHVzIHx8ICctJywgLy8gQWNjZXNzIHZpYSBqc29uRGF0YVxuICAgICAgICAgIHNvcnQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ2FsbG93U2NoZWR1bGluZycsXG4gICAgICAgICAgbGFiZWw6ICdBbGxvdyBTY2hlZHVsaW5nJyxcbiAgICAgICAgICBnZXR0ZXI6IChub2RlOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PiAobm9kZS5qc29uRGF0YT8uc3BlYz8uYWxsb3dTY2hlZHVsaW5nID8/ICctJykudG9TdHJpbmcoKSwgLy8gQWNjZXNzIHZpYSBqc29uRGF0YVxuICAgICAgICAgIHNvcnQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ3NjaGVkdWxhYmxlJyxcbiAgICAgICAgICBsYWJlbDogJ1NjaGVkdWxhYmxlJyxcbiAgICAgICAgICBnZXR0ZXI6IChub2RlOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PlxuICAgICAgICAgICAgbm9kZS5qc29uRGF0YT8uc3RhdHVzPy5jb25kaXRpb25zPy5maW5kKChjOiBhbnkpID0+IGMudHlwZSA9PT0gJ1NjaGVkdWxhYmxlJyk/LnN0YXR1cyB8fCAnLScsIC8vIEFjY2VzcyB2aWEganNvbkRhdGFcbiAgICAgICAgICBzb3J0OiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICAnYWdlJyxcbiAgICAgIF19XG4gICAgLz5cbiAgKSxcbn0pO1xuXG4vLyBOb2RlIERldGFpbCBWaWV3XG5yZWdpc3RlclJvdXRlKHtcbiAgcGF0aDogJy9sb25naG9ybi9ub2Rlcy86bmFtZXNwYWNlLzpuYW1lJyxcbiAgc2lkZWJhcjogTE9OR0hPUk5fTk9ERVNfTElTVF9ST1VURSxcbiAgcGFyZW50OiBMT05HSE9STl9ST09UX1NJREVCQVIsXG4gIG5hbWU6IExPTkdIT1JOX05PREVfREVUQUlMU19ST1VURSxcbiAgZXhhY3Q6IHRydWUsXG4gIGNvbXBvbmVudDogTm9kZURldGFpbHNWaWV3LFxufSk7XG5cbi8vIFNldHRpbmdzIExpc3QgVmlld1xucmVnaXN0ZXJSb3V0ZSh7XG4gIHBhdGg6ICcvbG9uZ2hvcm4vc2V0dGluZ3MnLFxuICBzaWRlYmFyOiBMT05HSE9STl9TRVRUSU5HU19MSVNUX1JPVVRFLFxuICBuYW1lOiBMT05HSE9STl9TRVRUSU5HU19MSVNUX1JPVVRFLFxuICBleGFjdDogdHJ1ZSxcbiAgY29tcG9uZW50OiAoKSA9PiAoXG4gICAgPFJlc291cmNlTGlzdFZpZXdcbiAgICAgIHRpdGxlPVwiTG9uZ2hvcm4gU2V0dGluZ3NcIlxuICAgICAgcmVzb3VyY2VDbGFzcz17TG9uZ2hvcm5TZXR0aW5nfVxuICAgICAgY29sdW1ucz17W1xuICAgICAgICAnbmFtZScsXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ3ZhbHVlJyxcbiAgICAgICAgICBsYWJlbDogJ1ZhbHVlJyxcbiAgICAgICAgICBnZXR0ZXI6IChzZXR0aW5nOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PiBzZXR0aW5nLmpzb25EYXRhPy52YWx1ZSwgLy8gQWxyZWFkeSB1c2luZyBqc29uRGF0YVxuICAgICAgICAgIHNvcnQ6IGZhbHNlLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6ICdhcHBsaWVkJyxcbiAgICAgICAgICBsYWJlbDogJ0FwcGxpZWQnLFxuICAgICAgICAgIGdldHRlcjogKHNldHRpbmc6IEt1YmVPYmplY3RJbnRlcmZhY2UpID0+IChzZXR0aW5nLmpzb25EYXRhPy5zdGF0dXM/LmFwcGxpZWQgPz8gZmFsc2UpLnRvU3RyaW5nKCksIC8vIEFjY2VzcyB2aWEganNvbkRhdGFcbiAgICAgICAgICBzb3J0OiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICAnYWdlJyxcbiAgICAgIF19XG4gICAgLz5cbiAgKSxcbn0pO1xuXG4vLyBCYWNrdXBzIExpc3QgVmlld1xucmVnaXN0ZXJSb3V0ZSh7XG4gIHBhdGg6ICcvbG9uZ2hvcm4vYmFja3VwcycsXG4gIHNpZGViYXI6IExPTkdIT1JOX0JBQ0tVUFNfTElTVF9ST1VURSxcbiAgbmFtZTogTE9OR0hPUk5fQkFDS1VQU19MSVNUX1JPVVRFLFxuICBleGFjdDogdHJ1ZSxcbiAgY29tcG9uZW50OiAoKSA9PiAoXG4gICAgPFJlc291cmNlTGlzdFZpZXdcbiAgICAgIHRpdGxlPVwiTG9uZ2hvcm4gQmFja3Vwc1wiXG4gICAgICByZXNvdXJjZUNsYXNzPXtMb25naG9ybkJhY2t1cH1cbiAgICAgIGNvbHVtbnM9e1tcbiAgICAgICAgLy8gVXNlIGRlZmF1bHQgbmFtZSBjb2x1bW4gcmVuZGVyaW5nXG4gICAgICAgICduYW1lJyxcbiAgICAgICAgLy8gT3RoZXIgY29sdW1ucy4uLlxuICAgICAgICB7XG4gICAgICAgICAgaWQ6ICdzbmFwc2hvdE5hbWUnLFxuICAgICAgICAgIGxhYmVsOiAnU25hcHNob3QgTmFtZScsXG4gICAgICAgICAgZ2V0dGVyOiAoYmFja3VwOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PiBiYWNrdXAuanNvbkRhdGE/LnN0YXR1cz8uc25hcHNob3ROYW1lIHx8ICctJywgLy8gQWNjZXNzIHZpYSBqc29uRGF0YVxuICAgICAgICAgIHNvcnQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ3NuYXBzaG90U2l6ZScsXG4gICAgICAgICAgbGFiZWw6ICdTbmFwc2hvdCBTaXplJyxcbiAgICAgICAgICBnZXR0ZXI6IChiYWNrdXA6IEt1YmVPYmplY3RJbnRlcmZhY2UpID0+IGJhY2t1cC5qc29uRGF0YT8uc3RhdHVzPy5zaXplIHx8ICctJywgLy8gQWNjZXNzIHZpYSBqc29uRGF0YVxuICAgICAgICAgIHNvcnQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgICB7XG4gICAgICAgICAgaWQ6ICdiYWNrdXBUYXJnZXQnLFxuICAgICAgICAgIGxhYmVsOiAnQmFja3VwIFRhcmdldCcsXG4gICAgICAgICAgZ2V0dGVyOiAoYmFja3VwOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PiBiYWNrdXAuanNvbkRhdGE/LnN0YXR1cz8uYmFja3VwVGFyZ2V0TmFtZSB8fCAnLScsIC8vIEFjY2VzcyB2aWEganNvbkRhdGFcbiAgICAgICAgICBzb3J0OiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6ICdzdGF0ZScsXG4gICAgICAgICAgbGFiZWw6ICdTdGF0ZScsXG4gICAgICAgICAgZ2V0dGVyOiAoYmFja3VwOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PiBiYWNrdXAuanNvbkRhdGE/LnN0YXR1cz8uc3RhdGUgfHwgJy0nLCAvLyBBY2Nlc3MgdmlhIGpzb25EYXRhXG4gICAgICAgICAgc29ydDogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgJ25hbWVzcGFjZScsXG4gICAgICAgICdhZ2UnLFxuICAgICAgXX1cbiAgICAvPlxuICApLFxufSk7XG5cbi8vIEJhY2t1cCBEZXRhaWwgVmlld1xucmVnaXN0ZXJSb3V0ZSh7XG4gIHBhdGg6ICcvbG9uZ2hvcm4vYmFja3Vwcy86bmFtZXNwYWNlLzpuYW1lJyxcbiAgc2lkZWJhcjogTE9OR0hPUk5fQkFDS1VQU19MSVNUX1JPVVRFLFxuICBwYXJlbnQ6IExPTkdIT1JOX1JPT1RfU0lERUJBUixcbiAgbmFtZTogTE9OR0hPUk5fQkFDS1VQX0RFVEFJTFNfUk9VVEUsXG4gIGV4YWN0OiB0cnVlLFxuICBjb21wb25lbnQ6IEJhY2t1cERldGFpbHNWaWV3LFxufSk7XG5cbi8vIEVuZ2luZSBJbWFnZXMgTGlzdCBWaWV3XG5yZWdpc3RlclJvdXRlKHtcbiAgcGF0aDogJy9sb25naG9ybi9lbmdpbmVpbWFnZXMnLFxuICBzaWRlYmFyOiBMT05HSE9STl9FTkdJTkVfSU1BR0VTX0xJU1RfUk9VVEUsXG4gIG5hbWU6IExPTkdIT1JOX0VOR0lORV9JTUFHRVNfTElTVF9ST1VURSxcbiAgZXhhY3Q6IHRydWUsXG4gIGNvbXBvbmVudDogKCkgPT4gKFxuICAgIDxSZXNvdXJjZUxpc3RWaWV3XG4gICAgICB0aXRsZT1cIkxvbmdob3JuIEVuZ2luZSBJbWFnZXNcIlxuICAgICAgcmVzb3VyY2VDbGFzcz17TG9uZ2hvcm5FbmdpbmVJbWFnZX1cbiAgICAgIGNvbHVtbnM9e1tcbiAgICAgICAgLy8gVXNlIGRlZmF1bHQgbmFtZSBjb2x1bW4gcmVuZGVyaW5nXG4gICAgICAgICduYW1lJyxcbiAgICAgICAgLy8gT3RoZXIgY29sdW1ucy4uLlxuICAgICAgICB7XG4gICAgICAgICAgaWQ6ICdzdGF0ZScsXG4gICAgICAgICAgbGFiZWw6ICdTdGF0ZScsXG4gICAgICAgICAgZ2V0dGVyOiAoaW1nOiBLdWJlT2JqZWN0SW50ZXJmYWNlKSA9PiBpbWcuanNvbkRhdGE/LnN0YXR1cz8uc3RhdGUgfHwgJy0nLCAvLyBBY2Nlc3MgdmlhIGpzb25EYXRhXG4gICAgICAgICAgc29ydDogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGlkOiAnaW1hZ2UnLFxuICAgICAgICAgIGxhYmVsOiAnSW1hZ2UnLFxuICAgICAgICAgIGdldHRlcjogKGltZzogS3ViZU9iamVjdEludGVyZmFjZSkgPT4gaW1nLmpzb25EYXRhPy5zcGVjPy5pbWFnZSB8fCAnLScsIC8vIEFjY2VzcyB2aWEganNvbkRhdGFcbiAgICAgICAgICBzb3J0OiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6ICdyZWZDb3VudCcsXG4gICAgICAgICAgbGFiZWw6ICdSZWYgQ291bnQnLFxuICAgICAgICAgIGdldHRlcjogKGltZzogS3ViZU9iamVjdEludGVyZmFjZSkgPT4gaW1nLmpzb25EYXRhPy5zdGF0dXM/LnJlZkNvdW50ID8/ICctJywgLy8gQWNjZXNzIHZpYSBqc29uRGF0YVxuICAgICAgICAgIHNvcnQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ2J1aWxkRGF0ZScsXG4gICAgICAgICAgbGFiZWw6ICdCdWlsZCBEYXRlJyxcbiAgICAgICAgICBnZXR0ZXI6IChpbWc6IEt1YmVPYmplY3RJbnRlcmZhY2UpID0+IGltZy5qc29uRGF0YT8uc3RhdHVzPy5idWlsZERhdGUgfHwgJy0nLCAvLyBBY2Nlc3MgdmlhIGpzb25EYXRhXG4gICAgICAgICAgc29ydDogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgJ2FnZScsXG4gICAgICBdfVxuICAgIC8+XG4gICksXG59KTtcblxuLy8gRW5naW5lIEltYWdlIERldGFpbCBWaWV3XG5yZWdpc3RlclJvdXRlKHtcbiAgcGF0aDogJy9sb25naG9ybi9lbmdpbmVpbWFnZXMvOm5hbWVzcGFjZS86bmFtZScsXG4gIHNpZGViYXI6IExPTkdIT1JOX0VOR0lORV9JTUFHRVNfTElTVF9ST1VURSxcbiAgcGFyZW50OiBMT05HSE9STl9ST09UX1NJREVCQVIsXG4gIG5hbWU6IExPTkdIT1JOX0VOR0lORV9JTUFHRV9ERVRBSUxTX1JPVVRFLFxuICBleGFjdDogdHJ1ZSxcbiAgY29tcG9uZW50OiBFbmdpbmVJbWFnZURldGFpbHNWaWV3LFxufSk7XG5cbi8vIFBsYWNlaG9sZGVyIGZvciBvdGhlciBMb25naG9ybiByZXNvdXJjZXMgY2FuIGJlIGFkZGVkIHNpbWlsYXJseVxuLy8gZS5nLiwgQmFja2luZyBJbWFnZXMsIFJlY3VycmluZyBKb2JzLCBTbmFwc2hvdHMsIGV0Yy5cblxuY29uc29sZS5sb2coJ0xvbmdob3JuIFBsdWdpbiByZWdpc3RlcmVkLicpO1xuXG4vLyBFeGFtcGxlIG9mIGhvdyB5b3UgbWlnaHQgaW5pdGlhbGl6ZSBwbHVnaW4tc3BlY2lmaWMgbG9naWNcbi8vIGNsYXNzIExvbmdob3JuUGx1Z2luIGV4dGVuZHMgUGx1Z2luIHtcbi8vICAgaW5pdGlhbGl6ZSgpOiBib29sZWFuIHtcbi8vICAgICBjb25zb2xlLmxvZygnTG9uZ2hvcm4gUGx1Z2luIGluaXRpYWxpemluZy4uLicpO1xuLy8gICAgIC8vIEFkZCBtb3JlIGNvbXBsZXggaW5pdGlhbGl6YXRpb24gbG9naWMgaGVyZSBpZiBuZWVkZWRcbi8vICAgICByZXR1cm4gdHJ1ZTtcbi8vICAgfVxuLy8gfVxuLy8gSGVhZGxhbXAucmVnaXN0ZXJQbHVnaW4oJ2xvbmdob3JuLXBsdWdpbi1pZCcsIG5ldyBMb25naG9yblBsdWdpbigpKTtcbiJdLCJuYW1lcyI6WyJtYWtlS3ViZU9iamVjdCIsIks4cyIsImxvbmdob3JuR3JvdXAiLCJsb25naG9yblZlcnNpb24iLCJMb25naG9yblZvbHVtZSIsIm1ha2VDdXN0b21SZXNvdXJjZUNsYXNzIiwiTG9uZ2hvcm5Ob2RlIiwiTG9uZ2hvcm5TZXR0aW5nIiwiTG9uZ2hvcm5CYWNrdXAiLCJMb25naG9ybkVuZ2luZUltYWdlIiwiVm9sdW1lRGV0YWlsc1ZpZXciLCJuYW1lc3BhY2UiLCJuYW1lIiwidXNlUGFyYW1zIiwiaXRlbSIsImVycm9yIiwianN4Iiwic3BlYyIsInN0YXR1cyIsIm1ldGFkYXRhIiwia3ViZXJuZXRlc1N0YXR1cyIsImpzeHMiLCJGcmFnbWVudCIsIk1haW5JbmZvU2VjdGlvbiIsIkxpbmsiLCJTZWN0aW9uQm94IiwiTmFtZVZhbHVlVGFibGUiLCJfYSIsIl9iIiwiQ29uZGl0aW9uc1RhYmxlIiwiTm9kZURldGFpbHNWaWV3IiwiQmFja3VwRGV0YWlsc1ZpZXciLCJFbmdpbmVJbWFnZURldGFpbHNWaWV3IiwiTE9OR0hPUk5fUk9PVF9TSURFQkFSIiwiTE9OR0hPUk5fVk9MVU1FU19MSVNUX1JPVVRFIiwiTE9OR0hPUk5fVk9MVU1FX0RFVEFJTFNfUk9VVEUiLCJMT05HSE9STl9OT0RFU19MSVNUX1JPVVRFIiwiTE9OR0hPUk5fTk9ERV9ERVRBSUxTX1JPVVRFIiwiTE9OR0hPUk5fU0VUVElOR1NfTElTVF9ST1VURSIsIkxPTkdIT1JOX0JBQ0tVUFNfTElTVF9ST1VURSIsIkxPTkdIT1JOX0JBQ0tVUF9ERVRBSUxTX1JPVVRFIiwiTE9OR0hPUk5fRU5HSU5FX0lNQUdFU19MSVNUX1JPVVRFIiwiTE9OR0hPUk5fRU5HSU5FX0lNQUdFX0RFVEFJTFNfUk9VVEUiLCJyZWdpc3RlclNpZGViYXJFbnRyeSIsInJlZ2lzdGVyUm91dGUiLCJSZXNvdXJjZUxpc3RWaWV3Iiwidm9sdW1lIiwibm9kZSIsIl9kIiwiX2MiLCJjIiwic2V0dGluZyIsImJhY2t1cCIsImltZyJdLCJtYXBwaW5ncyI6InFwQkFvQkEsS0FBTSxDQUFFLGVBQUFBLENBQWUsRUFBSUMsRUFBQUEsSUFBSSxRQUd6QkMsRUFBZ0IsY0FDaEJDLEVBQWtCLFVBRWxCQyxFQUFpQkMsRUFBQUEsd0JBQXdCLENBQzdDLFFBQVMsQ0FBQyxDQUFFLE1BQU9ILEVBQWUsUUFBU0MsRUFBaUIsRUFDNUQsYUFBYyxHQUNkLGFBQWMsU0FDZCxXQUFZLFNBQ2QsQ0FBQyxFQUVLRyxFQUFlRCxFQUFBQSx3QkFBd0IsQ0FDM0MsUUFBUyxDQUFDLENBQUUsTUFBT0gsRUFBZSxRQUFTQyxFQUFpQixFQUM1RCxhQUFjLEdBQ2QsYUFBYyxPQUNkLFdBQVksT0FDZCxDQUFDLEVBRUtJLEVB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
