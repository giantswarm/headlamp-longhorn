(function(t,o){typeof exports=="object"&&typeof module<"u"?o(require("react/jsx-runtime"),require("@kinvolk/headlamp-plugin/lib"),require("@kinvolk/headlamp-plugin/lib/CommonComponents"),require("@kinvolk/headlamp-plugin/lib/K8s/crd"),require("react-router-dom"),require("react")):typeof define=="function"&&define.amd?define(["react/jsx-runtime","@kinvolk/headlamp-plugin/lib","@kinvolk/headlamp-plugin/lib/CommonComponents","@kinvolk/headlamp-plugin/lib/K8s/crd","react-router-dom","react"],o):(t=typeof globalThis<"u"?globalThis:t||self,o(t.pluginLib.ReactJSX,t.pluginLib,t.pluginLib.CommonComponents,t.pluginLib.Crd,t.pluginLib.ReactRouter,t.pluginLib.React))})(this,function(t,o,l,m,v,A){"use strict";const j=(n=>n&&typeof n=="object"&&"default"in n?n:{default:n})(A),{makeKubeObject:q}=o.K8s.cluster,S="longhorn.io",h="v1beta2",I=m.makeCustomResourceClass({apiInfo:[{group:S,version:h}],isNamespaced:!0,singularName:"Volume",pluralName:"volumes"}),T=m.makeCustomResourceClass({apiInfo:[{group:S,version:h}],isNamespaced:!0,singularName:"Node",pluralName:"nodes"}),y=m.makeCustomResourceClass({apiInfo:[{group:S,version:h}],isNamespaced:!0,singularName:"Setting",pluralName:"settings"}),E=m.makeCustomResourceClass({apiInfo:[{group:S,version:h}],isNamespaced:!0,singularName:"Backup",pluralName:"backups"}),V=m.makeCustomResourceClass({apiInfo:[{group:S,version:h}],isNamespaced:!0,singularName:"EngineImage",pluralName:"engineimages"});function _(){var c,p;const{namespace:n,name:r}=v.useParams(),[s,i]=I.useGet(r,n);if(i)return t.jsxs("div",{children:["Error loading volume: ",i.message]});if(!s)return t.jsx("div",{children:"Loading..."});const{spec:a={},status:e={},metadata:d={}}=s.jsonData||{},{kubernetesStatus:u={}}=e;return t.jsxs(t.Fragment,{children:[t.jsx(l.MainInfoSection,{resource:s,title:`Volume: ${d.name}`,extraInfo:[{name:"State",value:e.state||"-"},{name:"Robustness",value:e.robustness||"-"},{name:"Node",value:e.currentNodeID?t.jsx(l.Link,{routeName:"node",params:{name:e.currentNodeID,namespace:n},children:e.currentNodeID}):"-"},{name:"Size",value:a.size||"-"}]}),t.jsx(l.SectionBox,{title:"Status Details",children:t.jsx(l.NameValueTable,{rows:[{name:"Actual Size",value:e.actualSize||"-"},{name:"Frontend Disabled",value:String(e.frontendDisabled)},{name:"Is Standby",value:String(e.isStandby)},{name:"Share Endpoint",value:e.shareEndpoint||"-"},{name:"Share State",value:e.shareState||"-"},{name:"Last Backup",value:e.lastBackup||"-"},{name:"Last Backup At",value:e.lastBackupAt||"-"},{name:"Expansion Required",value:String(e.expansionRequired)},{name:"Restore Required",value:String(e.restoreRequired)},{name:"Restore Initiated",value:String(e.restoreInitiated)}]})}),t.jsx(l.SectionBox,{title:"Configuration",children:t.jsx(l.NameValueTable,{rows:[{name:"Data Engine",value:a.dataEngine||"-"},{name:"Frontend",value:a.frontend||"-"},{name:"Number of Replicas",value:a.numberOfReplicas||"-"},{name:"Data Locality",value:a.dataLocality||"-"},{name:"Access Mode",value:a.accessMode||"-"},{name:"Backing Image",value:a.backingImage||"-"},{name:"Stale Replica Timeout",value:a.staleReplicaTimeout||"-"},{name:"Encrypted",value:String(a.encrypted)},{name:"Engine Image",value:a.image||"-"},{name:"From Backup",value:a.fromBackup||"-"},{name:"Disk Selector",value:((c=a.diskSelector)==null?void 0:c.join(", "))||"-"},{name:"Node Selector",value:((p=a.nodeSelector)==null?void 0:p.join(", "))||"-"},{name:"Disable Revision Counter",value:String(a.revisionCounterDisabled)},{name:"Replica Auto Balance",value:a.replicaAutoBalance||"-"},{name:"Unmap Mark SnapChain Removed",value:a.unmapMarkSnapChainRemoved||"-"},{name:"Snapshot Data Integrity",value:a.snapshotDataIntegrity||"-"},{name:"Freeze Filesystem For Snapshot",value:a.freezeFilesystemForSnapshot||"-"},{name:"Backup Target",value:a.backupTargetName||"-"},{name:"Backup Compression Method",value:a.backupCompressionMethod||"-"}]})}),t.jsx(l.SectionBox,{title:"Kubernetes Status",children:t.jsx(l.NameValueTable,{rows:[{name:"Namespace",value:u.namespace||"-"},{name:"PVC Name",value:u.pvcName||"-"},{name:"PV Name",value:u.pvName||"-"},{name:"PV Status",value:u.pvStatus||"-"},{name:"Last PVCRef At",value:u.lastPVCRefAt||"-"},{name:"Last PodRef At",value:u.lastPodRefAt||"-"}]})}),t.jsx(l.SectionBox,{title:"Conditions",children:t.jsx(l.ConditionsTable,{resource:s.jsonData})})]})}function w({specDisks:n,statusDisks:r}){const s=j.default.useMemo(()=>{if(!r)return[];const i={};for(const[a,e]of Object.entries(n||{}))i[a]=e;return Object.entries(r).map(([a,e])=>{const d=e.diskName&&i[e.diskName]||{};return{uuid:e.diskUUID||a,spec:d,status:e}})},[n,r]);return t.jsx(l.Table,{data:s,columns:[{header:"Name",accessorFn:i=>{var a;return((a=i.status)==null?void 0:a.diskName)||"-"}},{header:"UUID",accessorKey:"uuid"},{header:"Path",accessorFn:i=>{var a,e;return((a=i.status)==null?void 0:a.diskPath)||((e=i.spec)==null?void 0:e.path)||"-"}},{header:"Type",accessorFn:i=>{var a,e;return((a=i.status)==null?void 0:a.diskType)||((e=i.spec)==null?void 0:e.diskType)||"-"}},{header:"Allow Scheduling",accessorFn:i=>{var a;return String(((a=i.spec)==null?void 0:a.allowScheduling)??"-")}},{header:"Storage Available",accessorFn:i=>{var a;return((a=i.status)==null?void 0:a.storageAvailable)||"-"}},{header:"Storage Scheduled",accessorFn:i=>{var a;return((a=i.status)==null?void 0:a.storageScheduled)||"-"}},{header:"Storage Maximum",accessorFn:i=>{var a;return((a=i.status)==null?void 0:a.storageMaximum)||"-"}},{header:"Tags",accessorFn:i=>{var a,e;return((e=(a=i.spec)==null?void 0:a.tags)==null?void 0:e.join(", "))||"-"}},{header:"Status",accessorFn:i=>{var e,d;const a=(d=(e=i.status)==null?void 0:e.conditions)==null?void 0:d.find(u=>u.type==="Ready");return t.jsx(l.StatusLabel,{status:(a==null?void 0:a.status)==="True"?"success":"error",children:(a==null?void 0:a.status)||"Unknown"})}}]})}function x(){var O,B;const{namespace:n,name:r}=v.useParams(),[s,i]=T.useGet(r,n);if(i)return t.jsxs("div",{children:["Error loading node: ",i.message]});if(!s)return t.jsx("div",{children:"Loading..."});const{spec:a={},status:e={},metadata:d={}}=s.jsonData||{},u=e.conditions||[],c=u.find(L=>L.type==="Ready"),p=u.find(L=>L.type==="Schedulable");return t.jsxs(t.Fragment,{children:[t.jsx(l.MainInfoSection,{resource:s,title:`Node: ${d.name}`,extraInfo:[{name:"Ready",value:t.jsx(l.StatusLabel,{status:(c==null?void 0:c.status)==="True"?"success":"error",children:(c==null?void 0:c.status)||"Unknown"})},{name:"Schedulable",value:t.jsx(l.StatusLabel,{status:(p==null?void 0:p.status)==="True"?"success":"error",children:(p==null?void 0:p.status)||"Unknown"})},{name:"Allow Scheduling",value:String(a.allowScheduling??"-")},{name:"Region",value:e.region||"-"},{name:"Zone",value:e.zone||"-"}]}),t.jsx(l.SectionBox,{title:"Configuration",children:t.jsx(l.NameValueTable,{rows:[{name:"Tags",value:((O=a.tags)==null?void 0:O.join(", "))||"-"},{name:"Instance Manager CPU Request",value:a.instanceManagerCPURequest||"-"},{name:"Disks",value:Object.keys(a.disks||{}).join(", ")||"-"}]})}),t.jsx(l.SectionBox,{title:"Status Details",children:t.jsx(l.NameValueTable,{rows:[{name:"Auto Evicting",value:String(e.autoEvicting)},{name:"Last Periodic Snapshot Check",value:((B=e.snapshotCheckStatus)==null?void 0:B.lastPeriodicCheckedAt)||"-"},{name:"Disk Status",value:Object.keys(e.diskStatus||{}).join(", ")||"-"}]})}),t.jsx(l.SectionBox,{title:"Disks",children:t.jsx(w,{specDisks:a.disks,statusDisks:e.diskStatus})}),t.jsx(l.SectionBox,{title:"Conditions",children:t.jsx(l.ConditionsTable,{resource:s.jsonData})})]})}function U(){const{namespace:n,name:r}=v.useParams(),[s,i]=E.useGet(r,n);if(i)return t.jsxs("div",{children:["Error loading backup: ",i.message]});if(!s)return t.jsx("div",{children:"Loading..."});const{spec:a={},status:e={},metadata:d={}}=s.jsonData||{};return t.jsxs(t.Fragment,{children:[t.jsx(l.MainInfoSection,{resource:s,title:`Backup: ${d.name}`,extraInfo:[{name:"State",value:e.state||"-"},{name:"Snapshot Name",value:e.snapshotName||"-"},{name:"Backup Target",value:e.backupTargetName||"-"},{name:"Volume Name",value:e.volumeName||"-"}]}),t.jsx(l.SectionBox,{title:"Details",children:t.jsx(l.NameValueTable,{rows:[{name:"Size",value:e.size||"-"},{name:"Newly Uploaded Data",value:e.newlyUploadDataSize||"-"},{name:"Re-Uploaded Data",value:e.reUploadedDataSize||"-"},{name:"Snapshot Created At",value:e.snapshotCreatedAt||"-"},{name:"Backup Created At",value:e.backupCreatedAt||"-"},{name:"Last Synced At",value:e.lastSyncedAt||"-"},{name:"Compression Method",value:e.compressionMethod||"-"},{name:"Volume Size",value:e.volumeSize||"-"},{name:"Volume Created At",value:e.volumeCreated||"-"},{name:"Volume Backing Image",value:e.volumeBackingImageName||"-"},{name:"Progress",value:`${e.progress||0}%`},{name:"Replica Address",value:e.replicaAddress||"-"}]})}),a.labels&&t.jsx(l.SectionBox,{title:"Spec Labels",children:t.jsx(l.NameValueTable,{rows:Object.entries(a.labels).map(([u,c])=>({name:u,value:c}))})}),e.labels&&t.jsx(l.SectionBox,{title:"Status Labels",children:t.jsx(l.NameValueTable,{rows:Object.entries(e.labels).map(([u,c])=>({name:u,value:c}))})}),e.error&&t.jsx(l.SectionBox,{title:"Error",children:t.jsx("pre",{children:e.error})}),e.messages&&t.jsx(l.SectionBox,{title:"Messages",children:t.jsx(l.NameValueTable,{rows:Object.entries(e.messages).map(([u,c])=>({name:u,value:c}))})})]})}function M(){const{namespace:n,name:r}=v.useParams(),[s,i]=V.useGet(r,n);if(i)return t.jsxs("div",{children:["Error loading engine image: ",i.message]});if(!s)return t.jsx("div",{children:"Loading..."});const{spec:a={},status:e={},metadata:d={}}=s.jsonData||{};return t.jsxs(t.Fragment,{children:[t.jsx(l.MainInfoSection,{resource:s,title:`Engine Image: ${d.name}`,extraInfo:[{name:"State",value:e.state||"-"},{name:"Image",value:a.image||"-"},{name:"Ref Count",value:e.refCount??"-"},{name:"Build Date",value:e.buildDate||"-"},{name:"Incompatible",value:String(e.incompatible)}]}),t.jsx(l.SectionBox,{title:"Details",children:t.jsx(l.NameValueTable,{rows:[{name:"Version",value:e.version||"-"},{name:"Git Commit",value:e.gitCommit||"-"},{name:"CLI API Version",value:`${e.cliAPIMinVersion||"?"} - ${e.cliAPIVersion||"?"}`},{name:"Controller API Version",value:`${e.controllerAPIMinVersion||"?"} - ${e.controllerAPIVersion||"?"}`},{name:"Data Format Version",value:`${e.dataFormatMinVersion||"?"} - ${e.dataFormatVersion||"?"}`},{name:"No Ref Since",value:e.noRefSince||"-"}]})}),e.nodeDeploymentMap&&t.jsx(l.SectionBox,{title:"Node Deployment Status",children:t.jsx(l.NameValueTable,{rows:Object.entries(e.nodeDeploymentMap).map(([u,c])=>({name:u,value:String(c)}))})}),t.jsx(l.SectionBox,{title:"Conditions",children:t.jsx(l.ConditionsTable,{resource:s.jsonData})})]})}const g="longhorn",b="volumes",P="volume",N="nodes",F="node",D="settings",k="backups",G="backup",f="engineimages",z="engineimage";o.registerSidebarEntry({parent:null,name:g,label:"Longhorn",icon:"mdi:cow"}),o.registerSidebarEntry({parent:g,name:b,label:"Volumes",url:"/longhorn/volumes"}),o.registerSidebarEntry({parent:g,name:N,label:"Nodes",url:"/longhorn/nodes"}),o.registerSidebarEntry({parent:g,name:D,label:"Settings",url:"/longhorn/settings"}),o.registerSidebarEntry({parent:g,name:k,label:"Backups",url:"/longhorn/backups"}),o.registerSidebarEntry({parent:g,name:f,label:"Engine Images",url:"/longhorn/engineimages"}),o.registerRoute({path:"/longhorn/volumes",sidebar:b,name:b,exact:!0,component:()=>t.jsx(l.ResourceListView,{title:"Longhorn Volumes",resourceClass:I,columns:["name",{id:"state",label:"State",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.state)||"-"},sort:!0},{id:"robustness",label:"Robustness",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.robustness)||"-"},sort:!0},{id:"size",label:"Size",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.spec)==null?void 0:s.size)||"-"},sort:!0},{id:"node",label:"Node",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.currentNodeID)||"-"},sort:!0},"namespace","age"]})}),o.registerRoute({path:"/longhorn/volumes/:namespace/:name",sidebar:b,parent:g,name:P,exact:!0,component:_}),o.registerRoute({path:"/longhorn/nodes",sidebar:N,name:N,exact:!0,component:()=>t.jsx(l.ResourceListView,{title:"Longhorn Nodes",resourceClass:T,columns:["name",{id:"ready",label:"Ready",getter:n=>{var r,s,i,a;return((a=(i=(s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.conditions)==null?void 0:i.find(e=>e.type==="Ready"))==null?void 0:a.status)||"-"},sort:!0},{id:"allowScheduling",label:"Allow Scheduling",getter:n=>{var r,s;return(((s=(r=n.jsonData)==null?void 0:r.spec)==null?void 0:s.allowScheduling)??"-").toString()},sort:!0},{id:"schedulable",label:"Schedulable",getter:n=>{var r,s,i,a;return((a=(i=(s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.conditions)==null?void 0:i.find(e=>e.type==="Schedulable"))==null?void 0:a.status)||"-"},sort:!0},"age"]})}),o.registerRoute({path:"/longhorn/nodes/:namespace/:name",sidebar:N,parent:g,name:F,exact:!0,component:x}),o.registerRoute({path:"/longhorn/settings",sidebar:D,name:D,exact:!0,component:()=>t.jsx(l.ResourceListView,{title:"Longhorn Settings",resourceClass:y,columns:[{id:"name",label:"Name",getter:n=>n.metadata.name,sort:!0},{id:"value",label:"Value",getter:n=>{var r;return(((r=n.jsonData)==null?void 0:r.value)??"-").toString()},sort:!1},{id:"applied",label:"Applied",getter:n=>{var r,s;return(((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.applied)??!1).toString()},sort:!0},"age"]})}),o.registerRoute({path:"/longhorn/backups",sidebar:k,name:k,exact:!0,component:()=>t.jsx(l.ResourceListView,{title:"Longhorn Backups",resourceClass:E,columns:["name",{id:"snapshotName",label:"Snapshot Name",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.snapshotName)||"-"},sort:!0},{id:"snapshotSize",label:"Snapshot Size",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.size)||"-"},sort:!0},{id:"backupTarget",label:"Backup Target",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.backupTargetName)||"-"},sort:!0},{id:"state",label:"State",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.state)||"-"},sort:!0},"namespace","age"]})}),o.registerRoute({path:"/longhorn/backups/:namespace/:name",sidebar:k,parent:g,name:G,exact:!0,component:U}),o.registerRoute({path:"/longhorn/engineimages",sidebar:f,name:f,exact:!0,component:()=>t.jsx(l.ResourceListView,{title:"Longhorn Engine Images",resourceClass:V,columns:["name",{id:"state",label:"State",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.state)||"-"},sort:!0},{id:"image",label:"Image",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.spec)==null?void 0:s.image)||"-"},sort:!0},{id:"refCount",label:"Ref Count",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.refCount)??"-"},sort:!0},{id:"buildDate",label:"Build Date",getter:n=>{var r,s;return((s=(r=n.jsonData)==null?void 0:r.status)==null?void 0:s.buildDate)||"-"},sort:!0},"age"]})}),o.registerRoute({path:"/longhorn/engineimages/:namespace/:name",sidebar:f,parent:g,name:z,exact:!0,component:M}),console.log("Longhorn Plugin registered.")});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
